import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
import { environment } from '@environment';
import { Result } from '@shared/data/models/response.model';
import { <%= classify(name) %> } from '@domains/<%= dasherize(name) %>/data/models/<%= dasherize(name) %>.model';
import { <%= classify(name) %>Repository } from '@domains/<%= dasherize(name) %>/data/repositories/<%= dasherize(name) %>.repo';

@Injectable({
  providedIn: 'root'
})
export class <%= classify(name) %>Service implements <%= classify(name) %>Repository {

  public baseUrl = `${environment.apiUrl}/<%= name %>s`;

  constructor(private http: HttpClient) {}

  getAll(): Observable<Result<<%= classify(name) %>[]>> {
    return this.http.get<Result<<%= classify(name) %>[]>>(`${this.baseUrl}`);
  }

  get<%= classify(name) %> (id: string): Observable<Result<<%= classify(name) %>>> {
     return this.http.get<Result<<%= classify(name) %>>>(`${this.baseUrl}/${id}`);
  }

  create<%= classify(name) %> (<%= name %>: <%= classify(name) %>): Observable<Result<<%= classify(name) %>>> {
      return this.http.post<Result<<%= classify(name) %>>>(`${this.baseUrl}`, <%= name %>);
  }
  update<%= classify(name) %> (id: string, <%= name %>: <%= classify(name) %>): Observable<Result<<%= classify(name) %>>> {
      return this.http.put<Result<<%= classify(name) %>>>(`${this.baseUrl}?<%= name %>Id=${id}`, <%= name %>);
  }

  delete<%= classify(name) %> (id: string): Observable<Result<null>> {
      return this.http.delete<Result<null>>(`${this.baseUrl}?<%= name %>Id=${id}`);
  }
}