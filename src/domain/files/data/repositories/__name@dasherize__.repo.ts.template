import { Observable } from 'rxjs';
import { Injectable } from '@angular/core';
import { Result } from '@shared/data/models/response.model';
import { <%= classify(name) %> } from '@domains/<%= dasherize(name) %>/data/models/<%= dasherize(name) %>.model';

@Injectable({
  providedIn: 'root'
})
export abstract class <%= classify(name) %>Repository {

  <% if (hasRead) {%>
  abstract getAll(): Observable<Result<<%= classify(name) %>[]>> ;
  <% }%>

  <% if (hasReadOne) {%>
  abstract get<%= classify(name) %> (id: string): Observable<Result<<%= classify(name) %>>> ;
  <% }%>

  <% if (hasCreate) {%>
  abstract create<%= classify(name) %> (<%= name %>: <%= classify(name) %>): Observable<Result<<%= classify(name) %>>> ;
 	<% }%>

  <% if (hasUpdate) {%>
  abstract update<%= classify(name) %> (id: string, <%= name %>: <%= classify(name) %>): Observable<Result<<%= classify(name) %>>> ;
 	<% }%>

  <% if (hasDelete) {%>
  abstract delete<%= classify(name) %> (id: string): Observable<Result<null>> ;
  <% }%>
}